{
    "courseAOS": "Economics and Computer Science specialisations",
    "courseCode": "B2009",
    "courseName": "Commerce Specialist and Computer Science",
    "courseType": "Bachelor degree/Bachelor degree",
    "faculty": "Faculty of Business and Economics",
    "teachingPeriods": [
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "The nature and scope of economics; different economic systems; economic policy analysis and evaluation; main bodies of economic thought; examples of household, business and government economic decision problems; consumer choice, product demand and factor supply; enterprise choice, product supply and factor demand; market analyses of contemporary issues; competitive market long run equilibrium; market power; market failure and concerns for efficiency and equity; government involvement in the Australian economy.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Business and Economics",
                    "Prerequisites": "",
                    "Prohibitions": "",
                    "SCABand": 3,
                    "UnitCode": "ECC1000",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Principles of microeconomics"
                },
                {
                    "CreditPoints": 6,
                    "Description": "Presentation and analysis of grouped and ungrouped data using tables, charts and measures of location and dispersion; standardisation techniques, including index numbers, with application to share price indices and the CPI; analysis of relationships between variables using simple and multiple regression; extensions to multiple regression, including nonlinear and categorical explanatory variables and time series data with applications to forecasting; main ideas of probability theory as a foundation for statistical inference; concept of sampling as a way of capturing uncertainty about data; estimators and their properties; constructing and interpreting confidence intervals; fundamentals of hypothesis testing, testing hypotheses about the mean, difference between means and the slope, including analysis of variance.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Business and Economics",
                    "Prerequisites": "",
                    "Prohibitions": "ETG1102, ETW1000, ETW1102, ETX1100, ETX9000, FIT1006, STA1010",
                    "SCABand": 2,
                    "UnitCode": "ETC1000",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Business and economic statistics"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces programming fundamentals and the Python language to students. The unit provides a foundational understanding of program design and implementation of algorithms to solve simple problems. Fundamental programming control structures, built in and complex datatypes and mechanisms for modularity will be presented in Python.Topics covered will include basic input and output, program control structures, basic data structures and modular program structure. Problem-solving strategies and techniques for algorithm development, iteration and recursion, algorithm efficiency and the limitations of algorithms will be introduced.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "VCE Mathematics Methods or Specialist Mathematics units 3 & 4 with a study score of 25 or MTH1010.Note: For 2016 Further Mathematics with a study score of 35 will be accepted.",
                    "Prohibitions": "FIT1029",
                    "SCABand": 2,
                    "UnitCode": "FIT1045",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Algorithms and programming fundamentals in python"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces fundamental discrete mathematics topics including combinatorics, sets, relations and functions; methods of logic and proof, especially proof by induction; probability theory, Bayes' theorem; recursion; recurrence relations; trees and other graphs. It establishes the mathematical basis required for studies in Computer Science and Software Engineering.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "VCE Specialist Mathematics or Mathematical Methods units 3 and 4 with a study score of at least 25 or Further maths with a study score of at least 35.",
                    "Prohibitions": "MAT1077, MTH1112",
                    "SCABand": 2,
                    "UnitCode": "MAT1830",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Discrete mathematics for computer science"
                }
            ],
            "year": 0
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "The scope of macroeconomics and its microeconomic underpinnings; aggregation problems; partial equilibrium and general equilibrium analysis; the circular flow of income as a general equilibrium model; the mutual dependence of financial flows and flows of goods and services; sectoral composition of aggregate demand; business and investment behaviour; government spending and taxation; external balance and determination of current and capital accounts; labour market and aggregate supply; money, credit, and the conduct of monetary policy; inflation and unemployment; macroeconomic effects of deregulation in Australia.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Business and Economics",
                    "Prerequisites": "ECC1000 is recommended",
                    "Prohibitions": "ECF1200, ECG1102, ECS1102, ECW1102",
                    "SCABand": 3,
                    "UnitCode": "ECC1100",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Principles of macroeconomics"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 1 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to core problem-solving, analytical skills, and methodologies useful for developing flexible, robust, and maintainable software. In doing this it covers a range of conceptual levels, from high-level algorithms and data-structures, down to the machine models and simple assembly language programming. Topics include data types; data structures; algorithms; algorithmic complexity; recursion; and translation to assembly language.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "((One of FIT1040, ECE2071, FIT1002) and FIT1029) or FIT1045Students beginning FIT1008 are assumed to be able to: Identify the main components of an algorithm (variables, operators, expressions, etc), and write the algorithm associated to the specification of a simple problem. Be able to translate a simple algorithm into a program containing variable declarations, selection, repetition, and lists and/or arrays.",
                    "Prohibitions": "CSE1303, CSC1030, FIT1015, FIT2085",
                    "SCABand": 2,
                    "UnitCode": "FIT1008",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Introduction to computer science"
                },
                {
                    "CreditPoints": 6,
                    "Description": "The unit covers linear algebra (vectors, equations of lines and planes, solutions of simultaneous equations, determinates, Gauss elimination, Gauss-Jordan method), calculus topics (differentiation, parametric differentiation, fundamental theorem of calculus, and numerical integration), an introduction to multivariable calculus (functions of several variables, partial derivatives, tangent planes and directional derivatives), and the construction of splines and Taylor series expansions are also covered.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "VCE Specialist Mathematics or Mathematical Methods units 3 and 4 with a study score of at least 25 or Further maths with a study score of at least 35.",
                    "Prohibitions": "ENG1090, MTH1020, MAT2003",
                    "SCABand": 2,
                    "UnitCode": "MAT1841",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Continuous mathematics for computer science"
                }
            ],
            "year": 0
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "Theory of consumer choice, including applications to income-leisure choice and intertemporal consumption; isoquant theory of production; allocative efficiency and competition and monopoly; models of monopolistic competition and oligopoly; input pricing; microeconomic policies to address problems of market failure.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Business and Economics",
                    "Prerequisites": "ECC1000 or permission",
                    "Prohibitions": "ECC5900, ECX9000",
                    "SCABand": 3,
                    "UnitCode": "ECC2000",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Intermediate microeconomics"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to the empirical analysis of relationships between economic variables. The approach is based on linear regression theory, and emphasises 'hands on' data analysis. Topics studied will include properties of least squares estimators, hypothesis testing, the choice of appropriate functional form, the use of dummy variables, issues around modelling survey data and the problems of serial correlation, heteroscedasticity and multicollinearity.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Business and Economics",
                    "Prerequisites": "ETC1000 or must be enrolled in course 3822 or 4412 or 4439",
                    "Prohibitions": "ETC2400, ETC3440, ECC2410",
                    "SCABand": 3,
                    "UnitCode": "ETC2410",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Introductory econometrics"
                },
                {
                    "CreditPoints": 6,
                    "Description": "The unit introduces students to fundamentals of computer systems, networks and security. It provides basic knowledge of computer organisation and architecture, operating systems, networking architecture, technology and operation. It introduces the concepts of security goals for protecting common modern computer systems and communication networks from adversaries and the deployment of suitable countermeasures to achieve these goals.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "",
                    "Prohibitions": "FIT1031 and FIT2078",
                    "SCABand": 2,
                    "UnitCode": "FIT1047",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "South Africa"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Introduction to computer systems, networks and security"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to problem solving concepts and techniques fundamental to the science of programming. In doing this it covers problem specification, algorithmic design, analysis and implementation. Detailed topics include analysis of best, average and worst-case time and space complexity; introduction to numerical algorithms; recursion; advanced data structures such as heaps and B-trees; hashing; sorting algorithms; searching algorithms; graph algorithms; and numerical computing.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "One of FIT1008, FIT1015, FIT2085 or CSE1303 and 6 points of Level 1 mathematics.",
                    "Prohibitions": "CSE2304, FIT2009",
                    "SCABand": 2,
                    "UnitCode": "FIT2004",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Algorithms and data structures"
                }
            ],
            "year": 1
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 2 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 3 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces formal languages, models of computation, and computational complexity. It looks at what computers can and cannot compute. Topics include finite state automata, regular expressions, grammars, pushdown automata, computable functions, Turing machines, polynomial-time reductions, complexity classes P and NP, and NP-completeness. Skills at writing formal proofs will be developed.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "One of FIT1045, FIT1048, FIT1051, ENG1003 or an equivalent introductory programming unit or (FIT1040 and FIT1029), and one of MAT1830, MTH1030, ENG1005 or equivalent.Students are expected to have basic competence in computer programming.",
                    "Prohibitions": "CSE2303",
                    "SCABand": 2,
                    "UnitCode": "FIT2014",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Theory of computation"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit provides a practical and theoretical introduction to what it means to be an IT professional today. Students will encounter a range of issues relevant to professional practice in the workplace, as well as an understanding of the wider responsibilities that professionals are called upon to uphold in society. Topics addressed include: organisational and professional communication; mindfulness; teamwork; the nature of the IT professions; the role of professional associations; problem solving and information use; cross-cultural awareness; personal and professional ethics and codes of practice.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "Completion of 12 points of FIT units.",
                    "Prohibitions": "FIT2003",
                    "SCABand": 2,
                    "UnitCode": "FIT1049",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "South Africa"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "IT professional practice"
                }
            ],
            "year": 1
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 4 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Business and Economics elective",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to object-oriented design principles and their application to the construction of quality software. Students will learn the fundamental concepts that underlie modern object-oriented languages, and will learn how to implement their designs using at least one. Students will also learn how to use standard notation to illustrate their designs.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "(ENG1003 and ENG1060) or one of FIT1045, FIT1048, FIT1051, FIT1008 or FIT2071",
                    "Prohibitions": "FIT2024",
                    "SCABand": 2,
                    "UnitCode": "FIT2099",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Object oriented design and implementation"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "BCS Approved L3 Elective",
                    "UnitName": ""
                }
            ],
            "year": 2
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 5 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Business and Economics elective",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "Ability to code in differently constructed programming languages is analogous to speaking in different natural languages with varying grammars. Similar to natural languages, programming languages from different paradigms (styles) vary in their expressiveness and efficiency. One programming language may require many screens-full of complex code to accomplish a task for which another requires but a few expressive lines of code. Therefore, understanding the design principles of programming languages enables computational problems to be implemented in drastically different and powerful ways; leading, in some cases, to solutions that are more elegant, correct, maintainable, efficient and/or extensible.This unit examines a selection of programming languages and paradigms and explores the evolution of language design from low-level paradigms that are closer to the execution model of the machine, to more high-level declarative paradigms that allow programmers to model a problem precisely rather than specify its solution. The unit covers paradigms such as functional and logic programming, comparing and contrasting them to programming styles that students are already familiar with, including object-oriented, imperative and procedural programming paradigms. Topics include specification and data-modeling techniques (covering types and polymorphism, mutability-versus-purity, state management, and side-effects) and different models of execution such as strict-versus-lazy evaluation.The unit provides practical experience with a variety of non-procedural, non-object-oriented programming languages and discusses the influence of programming language theory on the design of current main-stream computer languages, and how the theory translates to practice.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT1008",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "FIT2102",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Programming paradigms"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This advanced unit builds on the concepts learnt in introductory algorithms and data structures study. It covers the latest algorithmic paradigms and problem-solving techniques required to address real-world programming challenges. It explores, in depth, the design and analysis of space-efficient/compact data structures and effective problem solving strategies to be used with them. Topics include advanced sorting and searching algorithms, succinct/compact trees, string and graph data structures, advanced hashing and table lookup methods",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2004 and FIT2102",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "FIT3155",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Advanced data structures and algorithms"
                }
            ],
            "year": 2
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 6 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Business and Economics elective",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit provides practical experience in researching, designing, developing and testing a substantial computer science project. Projects are generally software-based, although sometimes they may involve hardware development or investigation of theory. Projects cover the whole process of software (or hardware) development, from analysis through design to implementation and testing. Comprehensive written documentation on the project is required. Students are assigned in groups to a project supervisor. There are no lectures in this unit, although students will be expected meet weekly with their project supervisor, and attend 2-hour project management seminars during the first six weeks.The unit is the first part of a 12-credit point project sequence; the second part and exit point for the project is FIT3162.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2004",
                    "Prohibitions": "FIT3144",
                    "SCABand": 2,
                    "UnitCode": "FIT3161",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Computer science project 1"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "BCS Approved L3 Elective",
                    "UnitName": ""
                }
            ],
            "year": 3
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Specialisation unit 7 selected from a list",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Business and Economics elective",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit provides practical experience in researching, designing, developing and testing a non-trivial computer science project. Projects are generally software-based, although sometimes they may involve hardware development or investigation of theory. Projects cover the whole process of software (or hardware) development, from analysis through design to implementation and testing. Comprehensive written documentation on the project is required. Students are assigned in groups to a project supervisor. There are no lectures in this unit, although students will be expected to attend regular meetings with their project supervisor.The unit is the second part of a 12-credit point project sequence; the first part and entry point for the project is FIT3161.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT3161",
                    "Prohibitions": "FIT3144",
                    "SCABand": 2,
                    "UnitCode": "FIT3162",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Computer science project 2"
                },
                {
                    "CreditPoints": 6,
                    "Description": "Modern computer systems contain parallelism in both hardware and software. This unit covers parallelism in both general purpose and application specific computer architectures and the programming paradigms that allow parallelism to be exploited in software. The unit examines shared memory and message passing paradigms in hardware and software; concurrency, multithreading and synchronicity; parallel, clustered and distributed supercomputing models, languages and software tools and development environments. Students will program in these paradigms.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2004C or C++ programming language",
                    "Prohibitions": "FIT4001, CSE4333",
                    "SCABand": 2,
                    "UnitCode": "FIT3143",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Parallel computing"
                }
            ],
            "year": 3
        }
    ]
}