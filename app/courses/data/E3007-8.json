{
    "courseAOS": "Software Engineering specialisation",
    "courseCode": "E3007",
    "courseName": "Engineering and Science",
    "courseType": "Bachelor degree (honours)/Bachelor degree",
    "faculty": "Faculty of Engineering",
    "teachingPeriods": [
        {
            "code": "S1-01",
            "numberOfUnits": 5,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "ENG1001 Engineering Design: lighter, faster, stronger OR ENG1002",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "Faculty of Engineering",
                    "SCABand": 0,
                    "UnitCode": "Choose One",
                    "UnitName": "ENG1090,PHS1080,ENG1005"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major level 1 sequence 1",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Level 1 Science sequence 1",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "Faculty of Engineering",
                    "SCABand": 0,
                    "UnitCode": "Choose One",
                    "UnitName": "ENG1090,PHS1080"
                }
            ],
            "year": 0
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "ENG1002 Engineering design: cleaner, safer, smarter OR ENG1001",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 6,
                    "Description": "Vector algebra and geometry: equations of lines and planes. Linear algebra: matrix operations, up to 3x3 systems of linear equations, eigenvalues and eigenvectors. Calculus: improper integrals, integration by parts. Sequences and series: fundamentals of convergence, Taylor series, use in error analysis. Ordinary differential equations: first order, second order with constant coefficients, repeated roots, simple non-homogeneous cases. Laplace transforms: elementary functions, inversion by tables; shifting; derivatives, applications to ODEs. Multivariable calculus: partial derivatives, gradient and directional derivatives, maxima and minima.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Engineering",
                    "Prerequisites": "VCE Specialist Mathematics or ENG1090 (or equivalent)",
                    "Prohibitions": "ENG1091, MTH1030, MTH1035",
                    "SCABand": 2,
                    "UnitCode": "ENG1005",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Engineering mathematics"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major level 1 sequence 2",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Level 1 Science sequence 2",
                    "UnitName": ""
                }
            ],
            "year": 0
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to the use of Information Technology (IT) in modern engineering practice. Students will learn an object-oriented approach to both computer systems and software engineering for solving engineering problems.Students will work in small teams to develop a mobile application that meets a contemporary need in engineering. The fundamental stages in the software development lifecycle will be introduced, including requirements analysis, design, implementation and verification. Students will use IT tools to support the engineering process.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Engineering",
                    "Prerequisites": "",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "ENG1003",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Engineering mobile apps"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to core problem-solving, analytical skills, and methodologies useful for developing flexible, robust, and maintainable software. In doing this it covers a range of conceptual levels, from high level algorithms and data-structures, down to the machine models and simple assembly language programming. Topics include data types; data structures; algorithms; algorithmic complexity; recursion; and translation to assembly language.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "ENG1003 and ENG1060",
                    "Prohibitions": "FIT1015, FIT1008",
                    "SCABand": 2,
                    "UnitCode": "FIT2085",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Introduction to computer science for engineers"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 2",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "One of SCI1020 STA1010 MTH1020 MTH1030 [or Science elective if already taken as part of another sequence]",
                    "UnitName": ""
                }
            ],
            "year": 1
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "General rules for software development and design. Errors. Data types, variables, expressions, control statements M-files. Numerical techniques: Gauss elimination, solution of non-linear equations, optimisation, curve fitting, numerical calculus, ordinary differential equations.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Engineering",
                    "Prerequisites": "Mathematical methods (CAS) recommended.",
                    "Prohibitions": "ENG1602",
                    "SCABand": 2,
                    "UnitCode": "ENG1060",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Computing for engineers"
                },
                {
                    "CreditPoints": 6,
                    "Description": "A disciplined process is vital to the success of any major software development project. In this unit, students learn essential skills for managing software development efforts and for working within coordinated teams. Students will learn how to decide upon and document their team's structure and their process model. They will be expected to follow the process model they have documented, and to evaluate its effectiveness.There are many factors that can potentially cause a software project to fail. This unit will equip students with techniques to identify and manage these risks, and will take a risk-focused approach to project organisation.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "(ENG1003 and ENG1060) or one of FIT1045, FIT1048 or FIT1051",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "FIT2101",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Software engineering process and management"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 2",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "Faculty of Engineering",
                    "SCABand": 0,
                    "UnitCode": "Choose One",
                    "UnitName": "SCI2010,SCI2015"
                }
            ],
            "year": 1
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces fundamental discrete mathematics topics including combinatorics, sets, relations and functions; methods of logic and proof, especially proof by induction; probability theory, Bayes' theorem; recursion; recurrence relations; trees and other graphs. It establishes the mathematical basis required for studies in Computer Science and Software Engineering.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "VCE Specialist Mathematics or Mathematical Methods units 3 and 4 with a study score of at least 25 or Further maths with a study score of at least 35.",
                    "Prohibitions": "MAT1077, MTH1112",
                    "SCABand": 2,
                    "UnitCode": "MAT1830",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)",
                                "October intake 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Discrete mathematics for computer science"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to object-oriented design principles and their application to the construction of quality software. Students will learn the fundamental concepts that underlie modern object-oriented languages, and will learn how to implement their designs using at least one. Students will also learn how to use standard notation to illustrate their designs.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "(ENG1003 and ENG1060) or one of FIT1045, FIT1048, FIT1051, FIT1008 or FIT2071",
                    "Prohibitions": "FIT2024",
                    "SCABand": 2,
                    "UnitCode": "FIT2099",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Object oriented design and implementation"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 3",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science elective",
                    "UnitName": ""
                }
            ],
            "year": 2
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "This unit introduces students to problem solving concepts and techniques fundamental to the science of programming. In doing this it covers problem specification, algorithmic design, analysis and implementation. Detailed topics include analysis of best, average and worst-case time and space complexity; introduction to numerical algorithms; recursion; advanced data structures such as heaps and B-trees; hashing; sorting algorithms; searching algorithms; graph algorithms; and numerical computing.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "One of FIT1008, FIT1015, FIT2085 or CSE1303 and 6 points of Level 1 mathematics.",
                    "Prohibitions": "CSE2304, FIT2009",
                    "SCABand": 2,
                    "UnitCode": "FIT2004",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)",
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Algorithms and data structures"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit will provide students with the knowledge of how a multi-programming, multi-user operating systems operates and it manages and allocate resources to different applications. Students will be able to compare and contrast various resource management allocation strategies. Students will develop and implement new resource management strategy and study its properties.The topics covered will include an introduction to C Programming which is heavily used in development of operating systems, operating system structure and services, multi-programming processes, CPU scheduling, memory management, device management, synchronisation, deadlocks, virtual memory and file systems.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "One of FIT1047, FIT1031 or ENG1003",
                    "Prohibitions": "FIT2070",
                    "SCABand": 2,
                    "UnitCode": "FIT2100",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Operating systems"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 3",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science elective - level 2 or 3",
                    "UnitName": ""
                }
            ],
            "year": 2
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "The unit introduces computer networks with an explicit software and system-centric focus. It provides foundation skills in data communications, networks, and associated software interfaces, and introduces basic principles in network design, configuration, management and security.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2100",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "FIT3165",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Computer networks"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit builds on introductory units to analysis and design. It provides the professional software engineer with advanced knowledge and skills in high-level architectural design, its theoretical foundations, industrial best practice, and relevant application context. In the software life-cycle, software architecture sits between analysis/specification and design/implementation. The field of software architecture has come of age with a thriving research community and numerous high-level models, methods, tools and practices widely used in industry.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2099 or (FIT2001 and (FIT2004 or FIT2024 or CSE2304)) or (FIT2001 and FIT2081)",
                    "Prohibitions": "CSE3308",
                    "SCABand": 2,
                    "UnitCode": "FIT3077",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "South Africa"
                            ],
                            [
                                "First semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Software engineering: architecture and design"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 3",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science elective - level 2 or 3",
                    "UnitName": ""
                }
            ],
            "year": 3
        },
        {
            "code": "S2-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 6,
                    "Description": "This unit focuses on quality assurance issues and techniques in software development projects. It defines software quality and introduces a number of quality assurance measures, including human review and inspection of code and non-code artifacts, as well as execution-based testing.Students will apply systematic testing techniques in the context of individual modules and entire systems, using appropriate tools to automate the testing process where possible. Students will systematically document their testing plans and outcomes.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "(ENG1003 and ENG1060) or one of FIT1045, FIT1048 or FIT1051",
                    "Prohibitions": "FIT4004",
                    "SCABand": 2,
                    "UnitCode": "FIT2107",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ],
                        [
                            [
                                "Malaysia"
                            ],
                            [
                                "Second semester 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Software quality and testing"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit will provide an introduction to the concepts of database design and usage and the related issues of data management. Students will develop skills in planning, designing, and implementing a data model using an enterprise-scale relational database system (Oracle). Methods and techniques will also be presented to populate, retrieve, update and implement integrity features on data in the implemented database system.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2099",
                    "Prohibitions": "FIT1004, FIT2094",
                    "SCABand": 2,
                    "UnitCode": "FIT3171",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Databases"
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science major - level 3",
                    "UnitName": ""
                },
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "Science elective - level 2 or 3",
                    "UnitName": ""
                }
            ],
            "year": 3
        },
        {
            "code": "S1-01",
            "numberOfUnits": 4,
            "units": [
                {
                    "CreditPoints": 12,
                    "Description": "In this unit, students will undertake a full-year software development project in a self-managing team. Students will apply the skills they learned in prerequisite and co-requisite units to a larger project than any they have encountered to date. Through attempting larger-scale software development they will learn how the techniques they have encountered in isolation work together as an integrated methodology to make such complex projects feasible.The project will be managed through a heavyweight process model such as the Spiral Model, to ensure students are exposed to a representative example of both heavyweight and lightweight processes (which are covered in FIT2101) through the BSE core.For the first time in their degrees, students will solicit and document requirements from client proxies who are not IT professionals. This builds their communication skills with other stakeholders in preparation for the industry-based project or IBL.",
                    "EFTSL": 0.25,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "FIT2101 and FIT2107",
                    "Prohibitions": "",
                    "SCABand": 2,
                    "UnitCode": "FIT3170",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Software engineering practice"
                },
                {
                    "CreditPoints": 12,
                    "Description": "This unit introduces students to independent research. It is a core requirement for the Bachelor of Software Engineering (Honours) degree. Due to the nature of IT and Software Engineering, a wide range of project types can be offered to students. Some project components are of a practical nature and may involve some software development and/or experimentation, while other components are of a more theoretical nature.",
                    "EFTSL": 0.25,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "Must have completed 144 credit points of study in the Bachelor of Software Engineering (Honours) degree.",
                    "Prohibitions": "FIT4013, FIT4126, FIT4186, FIT4246, FIT4606",
                    "SCABand": 2,
                    "UnitCode": "FIT4003",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Software engineering research project"
                },
                {
                    "CreditPoints": 12,
                    "Description": "Students will undertake a large project and work in groups on a software project for a client. The client may be internal to Monash or from the industry or research organisation. In general, projects involve all aspects of the system development lifecycle. Groups are responsible for their own project management, with guidance from a supervisor. Some projects will warrant students working in pairs or individually.",
                    "EFTSL": 0.25,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "(FIT3170 and FIT3171) or (FIT2002 and FIT3077)",
                    "Prohibitions": "CSE4002",
                    "SCABand": 2,
                    "UnitCode": "FIT4002",
                    "UnitLocationTP": [
                        [
                            [
                                "Clayton"
                            ],
                            [
                                "Full year 2017 (Day)"
                            ]
                        ]
                    ],
                    "UnitName": "Software engineering industry experience studio project"
                },
                {
                    "CreditPoints": 6,
                    "Description": "This unit covers the internal mechanism of computers and how they are organised and programmed. Topics include combinatorial and sequential logic, Boolean Algebra, counters, ripple adders, tree adders, memory/addressing, busses, speed, DMA, data representation, machine arithmetic, microprogramming, caches and cache architectures, virtual memory and translation look-aside buffers, vectored interrupts, polled interrupts, pipelined architecture, superscalar architecture, data dependency, hazards, CISC, RISC, VLIW machine architectures.",
                    "EFTSL": 0.125,
                    "Faculty": "Faculty of Information Technology",
                    "Prerequisites": "One of FIT1031, FIT1047, FIT1008 or FIT2085",
                    "Prohibitions": "FIT2069",
                    "SCABand": 2,
                    "UnitCode": "FIT3159",
                    "UnitLocationTP": "Not Offered in 2017",
                    "UnitName": "Computer architecture"
                }
            ],
            "year": 4
        },
        {
            "code": "S2-01",
            "numberOfUnits": 1,
            "units": [
                {
                    "CreditPoints": 0,
                    "Faculty": "",
                    "SCABand": 0,
                    "UnitCode": "SE elective",
                    "UnitName": ""
                }
            ],
            "year": 4
        }
    ]
}